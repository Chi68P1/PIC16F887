#pragma config FOSC = HS        // Oscillator Selection bits (HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled and can be enabled by SWDTEN bit of the WDTCON register)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config MCLRE = ON       // RE3/MCLR pin function select bit (RE3/MCLR pin function is MCLR)
#pragma config CP = OFF         // Code Protection bit (Program memory code protection is disabled)
#pragma config CPD = OFF        // Data Code Protection bit (Data memory code protection is disabled)
#pragma config BOREN = OFF      // Brown Out Reset Selection bits (BOR disabled)
#pragma config IESO = OFF       // Internal External Switchover bit (Internal/External Switchover mode is disabled)
#pragma config FCMEN = OFF      // Fail-Safe Clock Monitor Enabled bit (Fail-Safe Clock Monitor is disabled)
#pragma config LVP = OFF        // Low Voltage Programming Enable bit (RB3 pin has digital I/O, HV on MCLR must be used for programming)

// CONFIG2
#pragma config BOR4V = BOR40V   // Brown-out Reset Selection bit (Brown-out Reset set to 4.0V)
#pragma config WRT = OFF        // Flash Program Memory Self Write Enable bits (Write protection off)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.


#include <xc.h>
#define _XTAL_FREQ 4000000
#include <stdio.h>
#include "lcd.h"

unsigned char sun;


void port()
{
    ANSEL = 0x00;
    ANSELH = 0x00;
    nRBPU = 0;
    WPUB = 0xFF;
    TRISB0 = TRISB1 = 1; 
}


void gui(unsigned char a)
{
    while(TRMT == 0);
    TXREG = a;
    lcd_gotoxy(0,0);
    lcd_puts(a);
    
}


void main(void)
{
    ANSEL= ANSELH =0;
    // to do baul 9600
    port();
   PORTD=0;
   lcd_init();
   
    BRGH=1;
    SPBRG=25;
    // CAU HINH UART NHAN
    SYNC = 0;  // CHE DO K DONG BO
    TXEN = 1; // CHO PHEP GUI DU LIEU DI
    TX9 = 0; // KHONG SU DUNG BIT 9 GUI DU LIEU
    // CAU HINH UART GUI
    SPEN = 1;
    RX9 = 0;
    CREN = 1; // NHAN NHIEU KY TU
    // CAU HINH NGAT INTERRUP CHO NHAN
    GIE=1;
    PEIE = 1;
    RCIE = 1;
    RCIF = 0;
    // cau hinh chan tx, rx
    TRISC6 = 0;  // GUI
    TRISC7 = 1;  // NHAN
  //  printf(" phan ha sun");
    while(1)
    {
        lcd_gotoxy(0,0);
      //  lcd_puts(sun);
      //  lcd_putc(sun);
        gui(sun1);
    }
    
    
}

void interrupt SAM(void)
{
    RCIF=0;
    // NHAN KY TI GUI TOI 8 BIT;
    sun = RCREG;
  //  while(TRMT == 0);
   // TXREG = sun;
  //  printf(sun);
}