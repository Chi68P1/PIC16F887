#pragma config FOSC = HS        // Oscillator Selection bits (HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled and can be enabled by SWDTEN bit of the WDTCON register)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config MCLRE = ON       // RE3/MCLR pin function select bit (RE3/MCLR pin function is MCLR)
#pragma config CP = OFF         // Code Protection bit (Program memory code protection is disabled)
#pragma config CPD = OFF        // Data Code Protection bit (Data memory code protection is disabled)
#pragma config BOREN = OFF      // Brown Out Reset Selection bits (BOR disabled)
#pragma config IESO = OFF       // Internal External Switchover bit (Internal/External Switchover mode is disabled)
#pragma config FCMEN = OFF      // Fail-Safe Clock Monitor Enabled bit (Fail-Safe Clock Monitor is disabled)
#pragma config LVP = OFF        // Low Voltage Programming Enable bit (RB3 pin has digital I/O, HV on MCLR must be used for programming)

// CONFIG2
#pragma config BOR4V = BOR40V   // Brown-out Reset Selection bit (Brown-out Reset set to 4.0V)
#pragma config WRT = OFF        // Flash Program Memory Self Write Enable bits (Write protection off)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.


#include <xc.h>
#define _XTAL_FREQ 4000000

void delay_4ms(void)
{
    T0CS = 0; // S? D?NG NGU?N FOCS/4
    T0SE = 0; // S? D?NG CACNH XUONG
    PSA = 0; // S? D?NG ?? CHIA 
    PS2 = 0; //  CHIA
    PS1 = 1; //  CHO 
    PS0 = 1;   //   1: 16
    TMR0 = 256-250;
    TMR0IF = 0; // XÓA C? BÁO TRÀNG
    
    while(TMR0IF == 0)
    {
        
    }
}


void port()
{
    ANSEL = ANSELH = 0x00;
    //C?U HÌNH ?I?N TR? KÉO LÊN
    nRBPU = 0;
    WPUB = 0xFF;
    // c?u hình ng?t ngoài RB0
    GIE = 1;
    INTE = 1;
    INTF = 0;
    INTEDG = 0;
    
    
    // c?u hình thanh ghi
    TRISB = 1;
    TRISD = 0;
    PORTD = 0;
    
}

unsigned char led[] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
unsigned char i,j,m,a;

void ledsuoi()
{
    m=0 ;
    for(i=0;i<8 ;i++)
    {
        for(j=0 ; j<8-i ;j++)
        {
          PORTD = (0x01<<j)| m ;
          for(a=0;a<125;a++)
          {
          delay_4ms();
          }
          
        }
        m = PORTD ;
        
        __delay_ms(500);
    }
    
}

void lednguoc()
{
    m=0;
    for(i=0;i<8 ;i++)
    {
        for(j=0 ; j<8-i;j++)
        {
          PORTD = (0x80>>j)|m ;
          __delay_ms(500);
        }
        m = PORTD ;
        __delay_ms(500);
    }
}

void main(void)
{
    port();
    while(1)
    {
        ledsuoi(); 
    }    
}