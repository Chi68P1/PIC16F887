/* 
YEU CAU: CHO FOSC = 20MHZ, 

DIEU CHE XUNG TAN SO 5KHZ, DO RONG XUNG 2 KENH BAN DAU LA 100uS

TRUYEN THONG NOI TIEP QUA CONG USART VOI BAUDRATE =9600,
KHI NHAN DUOC BAT KY KY TU NAO QUA USART THI GUI NGUOC LEN USART 
KHI GUI QUA TERMINAL DUNG KY TU 'A' VA 'B' DE DANH DAU DU LIEU, 'A' CHO KENH 1 VA 'B' CHO
KENH 2

VI DU: 
GUI : "123A" >> THI VI DIEU KHIEN BIET BIEN1= 123, THAY DOI DO RONG XUNG KENH 1 THANH 123uS
GUI : "50B" >> THI VI DIEU KHIEN BIET BIEN2= 50, THAY DOI DO RONG XUNG KENH 2 THANH 50uS

NEU DO RONG XUNG TRUYEN XUONG MA > 200 uS (CHU KY XUNG) THI GUI MOT THONG BAO LOI RA USART
VA IN DO RONG XUNG HIEN TAI LEN LCD

LY THUYET: XEM DATASHEET

*/

#include<htc.h>
#include<stdio.h>
#include<math.h>
#define _XTAL_FREQ 20000000
#include "lcd(16).h"
#include <string.h>
#include <stdlib.h> 

__CONFIG(FOSC_HS & WDTE_OFF & PWRTE_ON & MCLRE_OFF & CP_OFF & CPD_OFF 
 & BOREN_ON & IESO_OFF & FCMEN_OFF & LVP_OFF & DEBUG_OFF);

unsigned int dem;
char rxdata;

char chuoi[10]; //Khai bao mang chuoi gom 10 phan tu de nhan cong don chuoi lai
char chuoi1[10];
char ptr;	




void sendchar (char c);
void sendstring (const char* s);

int pwm1;
int pwm2;

void loadpwm (int us1, int us2);

void main() 
{
	lcd_init();
	ANSEL = ANSELH =0;


	// toc do baud 9600
	BRGH = 1;
	BRG16 = 1;
	
	SPBRGH=0X02;
	SPBRG=0X08;
	////////////////
	//==== KHOI DONG BO TRUYEN BAT DONG BO ========
	SYNC = 0;
	SPEN=1;
	////////////////
	//==== THIET LAP NGAT NHAN ====================
	RCIF=0;
	RCIE=1;
	PEIE=1;
	GIE=1;
	
	////////////////
	//==== KHONG TRUYEN NHAN 9 BIT ================
	TX9=0;
	RX9=0;
	
	///////////////
	//==== CHO PHEP TRUYEN VA NHAN ================
	TXEN=1;
	CREN=1;

	TRISC1=0;
	TRISC2=0;  // output
	PR2=249;   // chu ky pwm 10KHz
	T2CKPS1 = 0;  // prescale
	T2CKPS0 = 1;
	CCP1CON=0b00001100;///su dung tinh nang pwm muc thap ||0x0C->0b00001100: muc cao
	CCP2CON=0b00001100;

	pwm1=50;	// DO RONG XUNG BAN DAU
	pwm2=100;

	TMR2ON=1;


while(1)
{
	__delay_ms(50);
	loadpwm (pwm1,pwm2);
}
}
// HAM NAY CO TAC DUNG GUI MOT KY TU RA CONG USART
void sendchar (char c){		
	while (TXIF==0){}
	TXREG = c;
}

// HAM NAY CO TAC DUNG GUI MOT CHUOI KY TU RA USART	
void sendstring (const char* s)
{
	while(*s){
		sendchar(*s++);
	}
}

// SU DUNG HAM PRINT CHO CONG NAO

void interrupt ngat (){
	if (RCIF && RCIE){
		// NHAN KY TU	
		rxdata=RCREG;
		
		// GUI NGUOC LEN
		sendchar(rxdata);						
		if (rxdata == 'A'){	
			pwm1 =atoi(chuoi); 		// bien1 = gia tri cua chuoi cong don
			if (pwm1 <=200){
				//loadpwm(pwm1,pwm2);
				lcd_gotoxy(0,0);
				printf ("\fPWM1=%d\nPWM2=%d",pwm1,pwm2);
			}
			else {
			lcd_gotoxy(0,0);
			pwm1=0;
			printf ("\fPWM1=%d\nPWM2=%d",pwm1,pwm2);
			sendstring ("\r\nPWM1 KHONG DUOC PHEP LON HON 200 US\n");}
			for (ptr=10;ptr>0;ptr--){ 	//XOA SACH CA CHUOI DE THUC HIEN LAI NHUNG LAN SAU
					chuoi[ptr]=0;
			}
			
		}
		else if (rxdata == 'B'){	
			pwm2 =atoi(chuoi); 		// bien2 = gia tri chuoi cong don
			if (pwm2 <=200){
				//loadpwm(pwm1,pwm2);
				lcd_gotoxy(0,0);
				printf ("\fPWM1=%d\nPWM2=%d",pwm1,pwm2);
			}
			else { 
			lcd_gotoxy(0,0);
			pwm2=0;
			printf ("\fPWM1=%d\nPWM2=%d",pwm1,pwm2);	
			sendstring ("\r\nPWM2 KHONG DUOC PHEP LON HON 200 US\n");} //  \r di chuyen con tro ve dau dong, khong xuong hang
				
			for (ptr=10;ptr>0;ptr--){ 	//XOA SACH CA CHUOI DE THUC HIEN LAI NHUNG LAN SAU
					chuoi[ptr]=0;
			}
			
		}
		else if (rxdata == 'R'){	
			pwm1=0;
			pwm2=0;
			lcd_gotoxy(0,0);
			printf ("\fPWM1=0 \nPWM2=0 ");	
			for (ptr=10;ptr>0;ptr--){ 	//XOA SACH CA CHUOI DE THUC HIEN LAI NHUNG LAN SAU
					chuoi[ptr]=0;
			}
			
		}

		else {							
			chuoi[ptr] = rxdata;	// Neu khong phai la 'A' hoac 'B' thi cong don	
			ptr++;			
		}	
			
	}		
}
void loadpwm (int us1, int us2){
	
	int loadccp1, loadccp2;
	
	loadccp1 = us1*5;	// THEO CAC THONG SO O TREN, MOI 1US TUONG UNG VOI 5 DON VI CUA 10BIT DIEU KHIEN
	loadccp2 = us2*5;

	CCPR1L =loadccp1/4;
	CCPR2L =loadccp2/4;
	DC1B1 = 0;
	DC1B0 = 0;
	DC2B1 = 0;
	DC2B0 = 0;
	if ((loadccp1 & 1)==1) DC1B0=1;
	if ((loadccp1 & 2)==2) DC1B1=1;
	if ((loadccp2 & 1)==1) DC2B0=1;
	if ((loadccp2 & 2)==2) DC2B1=1;
	TMR2ON=1;
}
void putch(char c)
	{lcd_putc(c);}